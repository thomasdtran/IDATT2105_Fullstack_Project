{"remainingRequest":"/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/node_modules/babel-loader/lib/index.js!/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/src/components/RoomStats.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/src/components/RoomStats.vue","mtime":1621617515716},{"path":"/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/thomastran/Documents/FS_Project/idatt2105-project-FE/fs_frontend/src/components/RoomStats.vue"],"names":[],"mappings":";;;;;;;AAmCA,OAAO,OAAP,MAAoB,0BAApB;AACA,OAAO,UAAP,MAAuB,iBAAvB;AACA,SAAS,KAAT,QAAsB,yCAAtB;AACA,OAAO,0CAAP;AACA,OAAO,MAAP,MAAmB,QAAnB;AAEA,eAAe;AACX,EAAA,UAAU,EAAE;AACR,IAAA,OAAM,EAAN;AADQ,GADD;AAIX,EAAA,IAJW,kBAIL;AACF,WAAO;AACH,MAAA,IAAI,EAAE,UAAU,EADb;AAEH,MAAA,KAAK,EAAE,IAFJ;AAGH,MAAA,MAAM,EAAE,IAHL;AAIH,MAAA,QAAQ,EAAE,EAJP;AAKH,MAAA,aAAa,EAAE,EALZ;AAMH,MAAA,iBAAiB,EAAE,KANhB;AAOH,MAAA,oBAAoB,EAAE;AAPnB,KAAP;AASH,GAdU;AAeX,EAAA,OAAO,EAAE;AACL;AACC;AACA;AACA;AACA;AACA;AACK,IAAA,UAPD,wBAOa;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACd,gBAAA,KAAI,CAAC,oBAAL,GAA4B,IAA5B;AAEI,gBAAA,YAHU,GAGK,KAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAH3B;AAIV,gBAAA,IAJU,GAIH,KAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAA;AAAA,yBAAK,CAAC,CAAC,IAAF,KAAW,YAAhB;AAAA,iBAAnB,CAJG;AAOV,gBAAA,aAPU,GAOM,EAPN;AAAA;AAAA,uBASR,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,OAAO,CAAC,GAAR,CAAY,eAAZ,GAA8B,wBAA9B,GAAuD,IAAI,CAAC,EAA1E,EACL,IADK,CACA,UAAA,GAAG,EAAE;AACP,uBAAI,IAAI,CAAR,IAAa,GAAG,CAAC,IAAjB;AAAuB,oBAAA,aAAa,CAAC,IAAd,CAAmB,GAAG,CAAC,IAAJ,CAAS,CAAT,CAAnB;AAAvB;;AACA,kBAAA,WAAU,GAAI,MAAM,CAAC,IAAP,CAAY,GAAG,CAAC,IAAhB,CAAd;AACH,iBAJK,CATQ;;AAAA;AAeV,gBAAA,YAfU,GAeK,EAfL;;AAAA,uCAgBL,CAhBK;AAiBV,kBAAA,YAAY,CAAC,IAAb,CAAkB,IAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAA;AAAA,2BAAK,CAAC,CAAC,EAAF,KAAS,QAAQ,CAAC,WAAW,CAAC,CAAD,CAAZ,CAAtB;AAAA,mBAAnB,EAA2D,IAA7E;AAjBU;;AAgBd,qBAAS,CAAT,GAAa,CAAb,EAAgB,CAAA,GAAI,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAAA,wBAApC,CAAoC;AAE7C;;AAEA,gBAAA,KAAI,CAAC,MAAL,GAAc,IAAI,KAAJ,CAAU,SAAV,EAAqB;AAC/B,kBAAA,IAAI,EAAE;AACF,oBAAA,MAAM,EAAE,YADN;AAEF,oBAAA,QAAQ,EAAE,CACN;AACI,sBAAA,IAAI,EAAE,EADV;AAEI,sBAAA,SAAS,EAAE,KAFf;AAGI,sBAAA,MAAM,EAAE;AAHZ,qBADM;AAFR,mBADyB;AAW/B,kBAAA,KAAK,EAAE,oCAXwB;AAY/B,kBAAA,IAAI,EAAE,KAZyB;AAa/B,kBAAA,MAAM,EAAE,GAbuB;AAc/B,kBAAA,MAAM,EAAE,CAAC,SAAD,CAduB;AAe/B,kBAAA,WAAW,EAAE;AACT,oBAAA,SAAS,EAAE,MADF;AAET,oBAAA,SAAS,EAAE;AAFF,mBAfkB;AAmB/B,kBAAA,UAAU,EAAE;AACR,oBAAA,OAAO,EAAE,KADD;AAER,oBAAA,UAAU,EAAE;AAFJ,mBAnBmB;AAuB/B,kBAAA,cAAc,EAAE;AACZ,oBAAA,cAAc,EAAE,wBAAC,CAAD;AAAA,6BAAO,CAAC,CAAA,GAAI,EAAL,EAAS,WAAT,EAAP;AAAA,qBADJ;AAEZ,oBAAA,cAAc,EAAE,wBAAC,CAAD;AAAA,6BAAQ,CAAA,GAAI,gBAAZ;AAAA;AAFJ;AAvBe,iBAArB,CAAd;AA4BA,gBAAA,KAAI,CAAC,oBAAL,GAA4B,KAA5B;;AAhDc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiDjB,KAxDI;;AAyDL;AACC;AACA;AACA;AACA;AACK,IAAA,WA9DD,yBA8Dc;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACf,gBAAA,MAAI,CAAC,iBAAL,GAAyB,IAAzB;AAEI,gBAAA,IAHW,GAGJ,QAAQ,CAAC,MAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAAvB,CAHJ;AAMf,oBAAG,IAAG,KAAM,CAAZ,EAAe,QAAO,GAAI,CAAX,CAAf,KACK,IAAG,IAAG,KAAM,CAAZ,EAAe,QAAO,GAAI,CAAX,CAAf,KACA,QAAO,GAAI,MAAI,CAAC,iBAAhB;AAED,gBAAA,MAVW,GAUF,EAVE;AAWX,gBAAA,OAXW,GAWD,EAXC;AAAA;AAAA;AAAA;AAAA,2CAaK,MAAI,CAAC,QAbV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAaA,gBAAA,CAbA;AAAA;AAAA,uBAcL,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,OAAO,CAAC,GAAR,CAAY,eAAZ,GAA8B,gBAA9B,GAA+C,CAAC,CAAC,EAAjD,GAAoD,GAApD,GAAwD,QAAtE,EACL,IADK,CACA,UAAA,GAAE,EAAI;AACR,sBAAG,IAAI,CAAC,SAAL,CAAe,GAAG,CAAC,IAAnB,MAA6B,IAAI,CAAC,SAAL,CAAe,EAAf,CAAhC,EAAmD;AAC/C,oBAAA,MAAM,CAAC,IAAP,CAAY,MAAM,CAAC,IAAP,CAAY,GAAG,CAAC,IAAhB,CAAZ;AACA,oBAAA,OAAO,CAAC,IAAR,CAAa,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,IAAP,CAAY,GAAG,CAAC,IAAhB,EAAsB,CAAtB,CAAT,IAAqC,EAAlD;AACJ;AACH,iBANK,CAdK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAuBf,gBAAA,MAAI,CAAC,KAAL,GAAa,IAAI,KAAJ,CAAU,QAAV,EAAoB;AAC7B,kBAAA,IAAI,EAAE;AACF,oBAAA,MAAM,EAAE,MADN;AAEF,oBAAA,QAAQ,EAAE,CACN;AACI,sBAAA,IAAI,EAAE,EADV;AAEI,sBAAA,SAAS,EAAE,KAFf;AAGI,sBAAA,MAAM,EAAE;AAHZ,qBADM;AAFR,mBADuB;AAW7B,kBAAA,KAAK,EAAE,eAXsB;AAY7B,kBAAA,IAAI,EAAE,KAZuB;AAa7B,kBAAA,MAAM,EAAE,GAbqB;AAc7B,kBAAA,MAAM,EAAE,CAAC,SAAD,CAdqB;AAe7B,kBAAA,WAAW,EAAE;AACT,oBAAA,SAAS,EAAE,MADF;AAET,oBAAA,SAAS,EAAE;AAFF,mBAfgB;AAmB7B,kBAAA,UAAU,EAAE;AACR,oBAAA,OAAO,EAAE,KADD;AAER,oBAAA,UAAU,EAAE;AAFJ,mBAnBiB;AAuB7B,kBAAA,cAAc,EAAE;AACZ,oBAAA,cAAc,EAAE,wBAAC,CAAD;AAAA,6BAAO,CAAC,CAAA,GAAI,EAAL,EAAS,WAAT,EAAP;AAAA,qBADJ;AAEZ,oBAAA,cAAc,EAAE,wBAAC,CAAD;AAAA,6BAAQ,CAAA,GAAI,yBAAZ;AAAA;AAFJ;AAvBa,iBAApB,CAAb;AA4BA,gBAAA,MAAI,CAAC,iBAAL,GAAyB,KAAzB;;AAnDe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoDlB;AAlHI,GAfE;AAmIX,EAAA,QAAQ,EAAE;AACN;AACC;AACA;AACA;AACA;AACD,IAAA,iBAAiB,EAAC,6BAAU;AACxB,UAAI,KAAI,GAAI,MAAM,EAAlB;AACA,UAAI,QAAO,GAAI,KAAK,CAAC,IAAN,EAAf;AACA,UAAI,mBAAkB,GAAI,MAAM,CAAC,CAAC,QAAD,EAAW,CAAX,EAAc,EAAd,CAAD,CAAhC;AACA,UAAI,iBAAgB,GAAI,MAAM,CAAC,CAAC,QAAD,EAAW,CAAX,EAAc,EAAd,CAAD,CAA9B;;AAEA,UAAG,KAAK,CAAC,IAAN,CAAW,iBAAX,IAAgC,CAAnC,EAAqC;AAAE;AACnC,eAAO,KAAK,CAAC,IAAN,CAAW,mBAAX,EAAgC,OAAhC,CAAP;AACJ,OAFA,MAGK;AAAE;AACH,eAAO,KAAK,CAAC,IAAN,CAAW,iBAAX,EAA8B,OAA9B,CAAP;AACJ;AACJ;AAlBM,GAnIC;;AAuJX;AACC;AACA;AACA;AACK,EAAA,OA3JK,qBA2JK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACN,MAAI,CAAC,IAAL,CAAU,GAAV,CAAc,OAAO,CAAC,GAAR,CAAY,eAAZ,GAA8B,eAA5C,EACL,IADK,CACA,UAAA,GAAE,EAAK;AACT,gBAAA,GAAG,CAAC,IAAJ,CAAS,OAAT,CAAiB,UAAA,OAAM,EAAK;AACxB,kBAAA,MAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,OAAO,CAAC,IAAhC;AACH,iBAFD;AAGA,gBAAA,MAAI,CAAC,QAAL,GAAiB,GAAG,CAAC,IAArB;AACH,eANK,CADM;;AAAA;AAQZ,cAAA,MAAI,CAAC,WAAL;;AACA,cAAA,MAAI,CAAC,UAAL;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUhB;AArKW,CAAf","sourcesContent":["<template>\n    <div id=\"container\">\n        \n        <div class=\"dataUI\">\n\n            <h3>Antall timer hvert rom er blitt reservert:</h3>\n            <div id=\"chart\"></div>\n\n            <b>Tidsramme:</b> <select id=\"timeSelect\" ref=\"timeSelect\" @change=\"getAllRooms\">\n                <option value=\"0\">Siste uke</option>\n                <option value=\"1\">Siste måned</option>\n                <option value=\"2\">Dette semesteret</option>\n            </select>\n            <spinner v-show=\"isGettingAllRooms\" />\n\n        </div>\n        \n        <div class=\"dataUI\">\n            <h3>Reservasjoner i seksjoner til et rom:</h3>\n            <div id=\"chart2\"></div>\n            <b>Rom:</b> <select id= \"roomSelect\" ref=\"roomSelect\" @change=\"changeRoom\">\n                <option\n                    v-for=\"room in roomNameArray\"\n                    v-bind:key=\"room\"\n                    v-bind:value=\"room\"\n                >\n                    {{room}}\n                </option>\n            </select>\n            <spinner v-show=\"isGettingAllSections\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport Spinner from \"@/components/Spinner.vue\"\nimport createHttp from \"@/services/http\";\nimport { Chart } from \"frappe-charts/dist/frappe-charts.esm.js\";\nimport \"frappe-charts/dist/frappe-charts.min.css\";\nimport moment from 'moment';\n\nexport default {\n    components: {\n        Spinner\n    },\n    data(){\n        return {\n            http: createHttp(),\n            chart: null,\n            chart2: null,\n            allRooms: {},\n            roomNameArray: [],\n            isGettingAllRooms: false,\n            isGettingAllSections: false,\n        }\n    },\n    methods: {\n        /**\n         * Metode for å velge hvilket rom man vil ha statistikk for.\n         * Tegner et søylediagram som viser hvor mange ganger hver seksjon har blitt reservert.\n         * Dersom en seksjon ikke har blitt reservert vises den ikke.\n         * Henter kun data fra reservasjoner som har skjedd.\n         */\n        async changeRoom(){\n            this.isGettingAllSections = true;\n\n            let selectedRoom = this.$refs.roomSelect.value;\n            let room = this.allRooms.find(r => r.name === selectedRoom);\n            \n            let sectionKeys;\n            let sectionValues = [];\n\n            await this.http.get(process.env.VUE_APP_API_URL + \"/api/v1/stats/alltime/\"+room.id)\n            .then(res=>{\n                for(let v in res.data) sectionValues.push(res.data[v]);\n                sectionKeys = Object.keys(res.data);\n            });\n            \n            let sectionNames = [];\n            for (let i = 0; i < sectionKeys.length; i++) {\n                sectionNames.push(room.sections.find(s => s.id === parseInt(sectionKeys[i])).name);\n            }\n            \n            this.chart2 = new Chart(\"#chart2\", {\n                data: {\n                    labels: sectionNames,\n                    datasets: [\n                        {\n                            name: '',\n                            chartType: 'bar',\n                            values: sectionValues\n                        }\n                    ]\n                },\n                title: \"Antall ganger seksjon er reservert\",\n                type: \"bar\",\n                height: 500,\n                colors: ['#0055b7'],\n                axisOptions: {\n                    xAxisMode: \"tick\",\n                    xIsSeries: true\n                },\n                barOptions: {\n                    stacked: false,\n                    spaceRatio: 0.2\n                },\n                tooltipOptions: {\n                    formatTooltipX: (d) => (d + \"\").toUpperCase(),\n                    formatTooltipY: (d) => (d + \" reservasjoner\"),\n                }\n            });\n            this.isGettingAllSections = false\n        },\n        /**\n         * Metode for å finne statistikk på hvor mange timer hvert rom har vært i bruk/reservert.\n         * Tegner et søylediagram som viser total antall tid på hvert rom oppgitt i timer.\n         * Henter kun data fra reservasjoner som har skjedd.\n         */\n        async getAllRooms(){\n            this.isGettingAllRooms = true;\n\n            let time = parseInt(this.$refs.timeSelect.value);\n            let numweeks;\n\n            if(time === 0) numweeks = 1;\n            else if(time === 1) numweeks = 4;\n            else numweeks = this.findSemesterWeeks;\n\n            let rnames = [];\n            let rvalues = [];\n\n            for await (let e of this.allRooms) {\n                await this.http.get(process.env.VUE_APP_API_URL + \"/api/v1/stats/\"+e.id+\"/\"+numweeks)\n                .then(res =>{ \n                    if(JSON.stringify(res.data) !== JSON.stringify({})){\n                        rnames.push(Object.keys(res.data));\n                        rvalues.push(res.data[Object.keys(res.data)[0]] / 60);\n                    }\n                });\n            }\n\n            this.chart = new Chart(\"#chart\", {\n                data: {\n                    labels: rnames,\n                    datasets: [\n                        {\n                            name: '',\n                            chartType: 'bar',\n                            values: rvalues\n                        }\n                    ]\n                },\n                title: \"Reservert tid\",\n                type: \"bar\",\n                height: 500,\n                colors: ['#0055b7'],\n                axisOptions: {\n                    xAxisMode: \"tick\",\n                    xIsSeries: true\n                },\n                barOptions: {\n                    stacked: false,\n                    spaceRatio: 0.2\n                },\n                tooltipOptions: {\n                    formatTooltipX: (d) => (d + \"\").toUpperCase(),\n                    formatTooltipY: (d) => (d + \" timer reservert totalt\"),\n                }\n            });\n            this.isGettingAllRooms = false;\n        },\n    },\n    computed: {\n        /**\n         * Metode for å finne ut av hvor mange uker siden semesterstart.\n         * Bruker datoer hentet fra ntnu sine nettsider:\n         * vårsemesteret starter 11.januar, høstsemesteret (immatrikulering) starter 16. august i\n         */\n        findSemesterWeeks:function(){\n            let today = moment();\n            let thisyear = today.year();\n            let springSemesterStart = moment([thisyear, 0, 11])\n            let fallSemesterStart = moment([thisyear, 7, 16])\n\n            if(today.diff(fallSemesterStart) < 0){ //vårsemester, inkluderer sommerferien\n                return today.diff(springSemesterStart, 'weeks')\n            }\n            else { //høstsemester\n                return today.diff(fallSemesterStart, 'weeks');\n            }\n        }\n    },\n    /**\n     * Henter data om alle rom til bruk senere,\n     * kaller også på metoder for å tegne søylediagrammene\n     */\n    async mounted() {\n        await this.http.get(process.env.VUE_APP_API_URL + \"/api/v1/rooms\")\n        .then(res => {\n            res.data.forEach(element => {\n                this.roomNameArray.push(element.name);\n            });\n            this.allRooms  = res.data\n        })\n        this.getAllRooms();\n        this.changeRoom();\n    }\n}\n</script>\n\n<style scoped>\n\n*{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\n#container{\n    min-height: 62vh;\n}\n\nh3{\n    margin-bottom: 2rem;\n}\n\n.dataUI {\n    width: 62%;\n    margin: auto;\n    margin-bottom: 5rem;\n}\n\n#dataUI b{\n    padding-left: 1rem;\n}\n\nselect {\n    padding: 7px;\n    margin: 10px;\n}\n\n#chart, #chart2{\n    background-color: #f2f2f2;\n    border-radius: 5px;\n    padding: 3rem;\n}\n\n</style>\n"],"sourceRoot":""}]}